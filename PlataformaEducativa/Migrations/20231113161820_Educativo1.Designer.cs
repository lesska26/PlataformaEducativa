// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaEducativa.Models;

#nullable disable

namespace PlataformaEducativa.Migrations
{
    [DbContext(typeof(PlataformaEducativaDbContext))]
    [Migration("20231113161820_Educativo1")]
    partial class Educativo1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlataformaEducativa.Models.CursoNota", b =>
                {
                    b.Property<int>("CursoNotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoNotaId"), 1L, 1);

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int>("EstudiantesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IniciarCursoId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<float>("Nota")
                        .HasColumnType("real");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CursoNotaId");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("IniciarCursoId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CursoNota");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.CursoParticipante", b =>
                {
                    b.Property<int>("CursoParticipanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoParticipanteId"), 1L, 1);

                    b.Property<int>("EstudiantesId")
                        .HasColumnType("int");

                    b.HasKey("CursoParticipanteId");

                    b.HasIndex("EstudiantesId");

                    b.ToTable("CursoParticipante");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.CursoProfesor", b =>
                {
                    b.Property<int>("CursoProfesorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoProfesorId"), 1L, 1);

                    b.Property<int>("IniciarCursoId")
                        .HasColumnType("int");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CursoProfesorId");

                    b.HasIndex("IniciarCursoId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("cursoProfesors");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Cursos", b =>
                {
                    b.Property<int>("CursosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursosId"), 1L, 1);

                    b.Property<string>("CursosName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Duracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CursosId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Estudiantes", b =>
                {
                    b.Property<int>("EstudiantesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstudiantesId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("EstudiantesId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("estudiantes");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.IniciarCurso", b =>
                {
                    b.Property<int>("IniciarCursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IniciarCursoId"), 1L, 1);

                    b.Property<byte>("Activo")
                        .HasColumnType("tinyint");

                    b.Property<int>("CursosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIniciar")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraIniciar")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraTerminar")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstitucionesId")
                        .HasColumnType("int");

                    b.HasKey("IniciarCursoId");

                    b.HasIndex("CursosId");

                    b.HasIndex("InstitucionesId");

                    b.ToTable("iniciarCurso");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Instituciones", b =>
                {
                    b.Property<int>("InstitucionesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstitucionesId"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstitucionesId");

                    b.ToTable("instituciones");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Materia", b =>
                {
                    b.Property<int>("MateriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MateriaId"), 1L, 1);

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<string>("MateriaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MateriaId");

                    b.ToTable("materia");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Municipio", b =>
                {
                    b.Property<int>("MunicipioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MunicipioId"), 1L, 1);

                    b.Property<string>("MunicipioName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MunicipioId");

                    b.ToTable("municipio");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Roles", b =>
                {
                    b.Property<int>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolesId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("RolesId");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Sector", b =>
                {
                    b.Property<int>("SectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectorId"), 1L, 1);

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("SectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectorId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("sector");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<byte>("Confirmar")
                        .HasColumnType("tinyint");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<string>("Sector")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolesId");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Usuario_Materia", b =>
                {
                    b.Property<int>("Usuario_MateriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Usuario_MateriaId"), 1L, 1);

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Usuario_MateriaId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("usuario_Materias");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.CursoNota", b =>
                {
                    b.HasOne("PlataformaEducativa.Models.Estudiantes", "Estudiantes")
                        .WithMany()
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaEducativa.Models.IniciarCurso", "IniciarCurso")
                        .WithMany()
                        .HasForeignKey("IniciarCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaEducativa.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaEducativa.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiantes");

                    b.Navigation("IniciarCurso");

                    b.Navigation("Materia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.CursoParticipante", b =>
                {
                    b.HasOne("PlataformaEducativa.Models.Estudiantes", "Estudiantes")
                        .WithMany()
                        .HasForeignKey("EstudiantesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiantes");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.CursoProfesor", b =>
                {
                    b.HasOne("PlataformaEducativa.Models.IniciarCurso", "IniciarCurso")
                        .WithMany()
                        .HasForeignKey("IniciarCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaEducativa.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaEducativa.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IniciarCurso");

                    b.Navigation("Materia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Cursos", b =>
                {
                    b.HasOne("PlataformaEducativa.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Estudiantes", b =>
                {
                    b.HasOne("PlataformaEducativa.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.IniciarCurso", b =>
                {
                    b.HasOne("PlataformaEducativa.Models.Cursos", "Cursos")
                        .WithMany()
                        .HasForeignKey("CursosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaEducativa.Models.Instituciones", "Instituciones")
                        .WithMany()
                        .HasForeignKey("InstitucionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cursos");

                    b.Navigation("Instituciones");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Sector", b =>
                {
                    b.HasOne("PlataformaEducativa.Models.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Usuario", b =>
                {
                    b.HasOne("PlataformaEducativa.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("PlataformaEducativa.Models.Usuario_Materia", b =>
                {
                    b.HasOne("PlataformaEducativa.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaEducativa.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
